<?php

declare(strict_types=1);

namespace PackageVersions;

use Composer\InstalledVersions;
use OutOfBoundsException;

class_exists(InstalledVersions::class);

/**
 * This class is generated by composer/package-versions-deprecated, specifically by
 * @see \PackageVersions\Installer
 *
 * This file is overwritten at every run of `composer install` or `composer update`.
 *
 * @deprecated in favor of the Composer\InstalledVersions class provided by Composer 2. Require composer-runtime-api:^2 to ensure it is present.
 */
final class Versions
{
    /**
     * @deprecated please use {@see self::rootPackageName()} instead.
     *             This constant will be removed in version 2.0.0.
     */
    const ROOT_PACKAGE_NAME = 'chilidevs/cf7-sms';

    /**
     * Array of all available composer packages.
     * Dont read this array from your calling code, but use the \PackageVersions\Versions::getVersion() method instead.
     *
     * @var array<string, string>
     * @internal
     */
    const VERSIONS          = array (
  'composer/package-versions-deprecated' => 'dev-master@64291c788b9a18272346decf566931e33a317399',
  'guzzlehttp/guzzle' => '7.2.0@0aa74dfb41ae110835923ef10a9d803a22d50e79',
  'guzzlehttp/promises' => 'dev-master@ddfeedfff2a52661429437da0702979f708e6ac6',
  'guzzlehttp/psr7' => '1.x-dev@25f7f893f0b52b7b14e244a16679d72b1f0088de',
  'laminas/laminas-diactoros' => '2.6.x-dev@4f1d12676a2c402fc8c02e7436cf6d80604ef611',
  'laminas/laminas-zendframework-bridge' => '1.2.x-dev@466d07d5a476e974c17fc327c807ce3b7e2ce4cb',
  'lcobucci/jwt' => '3.4.x-dev@051da6e01fbbb690f646dff5e44f92a7079baba4',
  'psr/container' => 'dev-master@381524e8568e07f31d504a945b88556548c8c42e',
  'psr/http-client' => 'dev-master@22b2ef5687f43679481615605d7a15c557ce85b1',
  'psr/http-factory' => 'dev-master@36fa03d50ff82abcae81860bdaf4ed9a1510c7cd',
  'psr/http-message' => 'dev-master@efd67d1dc14a7ef4fc4e518e7dee91c271d524e4',
  'ralouphie/getallheaders' => '3.0.3@120b605dfeb996808c31b6477290a714d356e822',
  'vonage/client' => 'dev-master@29f23e317d658ec1c3e55cf778992353492741d7',
  'vonage/client-core' => 'v2.6.0@0c293b4649ba7e6ab212b74db9933b81acc399eb',
  'vonage/nexmo-bridge' => '0.1.0@62653b1165f4401580ca8d2b859f59c968de3711',
  'chilidevs/cf7-sms' => '1.0.0+no-version-set@',
);

    private function __construct()
    {
    }

    /**
     * @psalm-pure
     *
     * @psalm-suppress ImpureMethodCall we know that {@see InstalledVersions} interaction does not
     *                                  cause any side effects here.
     */
    public static function rootPackageName() : string
    {
        if (!class_exists(InstalledVersions::class, false) || !InstalledVersions::getRawData()) {
            return self::ROOT_PACKAGE_NAME;
        }

        return InstalledVersions::getRootPackage()['name'];
    }

    /**
     * @throws OutOfBoundsException If a version cannot be located.
     *
     * @psalm-param key-of<self::VERSIONS> $packageName
     * @psalm-pure
     *
     * @psalm-suppress ImpureMethodCall we know that {@see InstalledVersions} interaction does not
     *                                  cause any side effects here.
     */
    public static function getVersion(string $packageName): string
    {
        if (class_exists(InstalledVersions::class, false) && InstalledVersions::getRawData()) {
            return InstalledVersions::getPrettyVersion($packageName)
                . '@' . InstalledVersions::getReference($packageName);
        }

        if (isset(self::VERSIONS[$packageName])) {
            return self::VERSIONS[$packageName];
        }

        throw new OutOfBoundsException(
            'Required package "' . $packageName . '" is not installed: check your ./vendor/composer/installed.json and/or ./composer.lock files'
        );
    }
}
